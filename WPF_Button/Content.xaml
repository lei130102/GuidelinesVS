<Window x:Class="WPF_Button.Content"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Button"
        mc:Ignorable="d"
        Title="Content" Height="500" Width="600">
    <StackPanel>

        <Button x:Name="helloworld" Click="helloworld_Click">Hello, world!</Button>
        <Button Background="Beige" Foreground="Blue" FontWeight="Bold">Formatted Button</Button>
        <!--控件内部，Button 控件的 Content 文字内容会被转换为 TextBlock 控件，也就是说你可以按照 TextBlock 的方式控制 Button 控件文字的样式。在 Button 控件中，你会找到几个这样的特性，包括（但不限于）Foreground, Background, FontWeight 等等-->


        <!--具有高级内容的按钮
            我们已经多次讨论过这个问题，但是关于WPF的一个非常酷的事情是能够用其他WPF控件替换控件中的简单文本。 
            这也意味着您不必将按钮限制为简单文本，格式相同 - 您可以添加多个具有不同格式的文本控件。 WPF Button
            仅支持一个直接子控件，但您可以将其设置为Panel，然后将根据需要放入任意数量的控件。 您可以使用它来创建具有各种格式的按钮-->
        <Button>
            <StackPanel Orientation="Horizontal">
                <TextBlock>Formatted</TextBlock>
                <TextBlock Foreground="Blue" FontWeight="Bold" Margin="2,0">Button</TextBlock>
                <TextBlock Foreground="Gray" FontStyle="Italic">[Various]</TextBlock>
            </StackPanel>
        </Button>

        <!--带图片的按钮（ImageButton）
            在许多UI框架中，您将找到常规Button，然后是一个或多个其他变体，它们将提供额外的功能。 最常用的变体之一是ImageButton，顾名思义，
            它是一个Button，它通常允许您在文本之前包含图片。 但是在WPF中，不需要单独的控件来实现这一点 - 正如您刚才看到的，我们可以在
            Button中放置几个控件，这样您就可以轻松地向它添加一个Image控件-->
        <Button Padding="5">
            <StackPanel Orientation="Horizontal">
                <Image Source="/Image/google.png"/>
                <TextBlock Margin="5,0" Text="Help"/>
            </StackPanel>
        </Button>


    </StackPanel>
</Window>
