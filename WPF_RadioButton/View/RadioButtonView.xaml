<Window x:Class="WPF_RadioButton.View.RadioButtonView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_RadioButton.View"
        xmlns:converter="clr-namespace:WPF_RadioButton.Converter"
        xmlns:model="clr-namespace:WPF_RadioButton.Model"
        mc:Ignorable="d"
        Title="RadioButtonView" Height="450" Width="800"
        DataContext="{Binding RadioButtonViewModel, Source={StaticResource Locator}}">
    <!--
    RadioButton类继承自ToggleButton类，并使用相同的IsChecked属性和相同的Checked、Unchecked以及Indeterminate事件

    此外，RadioButton类还增加了GroupName属性，该属性用于控制如何对单选按钮进行分组

    单选按钮通常由他们的容器进行分组，可以使用GroupName属性覆盖这一默认行为
    
    并非一定使用GroupBox容器封装单选按钮，但通常约定这么做。GroupBox控件显示一条边框和一个可应用于按钮组的标题
    -->
        <Window.Resources>
        <converter:SexToBoolConverter x:Key="SexToIsCheckedConverter"/>
    </Window.Resources>
    <StackPanel>
        <RadioButton Content="男" IsChecked="{Binding Sex, Converter={StaticResource SexToIsCheckedConverter}, ConverterParameter={x:Static model:Sex.Male}}"/>
        <RadioButton Content="女" IsChecked="{Binding Sex, Converter={StaticResource SexToIsCheckedConverter}, ConverterParameter={x:Static model:Sex.Female}}"/>
    </StackPanel>
</Window>
