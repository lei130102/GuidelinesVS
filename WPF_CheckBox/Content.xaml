<Window x:Class="WPF_CheckBox.Content"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_CheckBox"
        mc:Ignorable="d"
        Title="Content" Height="500" Width="250">
    <StackPanel Margin="10">
        <Label FontWeight="Bold">Application Options
        </Label>
        <!--
        IsChecked属性是可空的Boolean类型，这意味着该属性可以设置为true、false或者null
        -->
        <CheckBox IsChecked="{x:Null}">
            <TextBlock>
                Enable feature <Run Foreground="Green" FontWeight="Bold">ABC</Run>
            </TextBlock>
        </CheckBox>
        <CheckBox IsChecked="True">
            <WrapPanel>
                <TextBlock>
                Enable feature <Run FontWeight="Bold">XYZ</Run>
                </TextBlock>
                <Image Source="/Image/n00.png" Width="42" Height="30" Margin="5,0"/>
            </WrapPanel>
        </CheckBox>
        <CheckBox>
            <TextBlock>
            Enable feature <Run Foreground="Blue" TextDecorations="Underline" FontWeight="Bold">WWW</Run>
            </TextBlock>
        </CheckBox>

        <!--
        IsThreeState 属性

        IsThreeState属性决定了用户是否能将复选框设置为不确定状态
        如果IsThreeState属性被设置为false(默认值)，单击复选框时，其状态会在选中和未选中两种状态之间切换，并且这时只能通过代码将复选框设置为不确定状态
        如果IsThreeState属性被设置为true，单击复选框时，就会在所有可能的三种状态之间循环切换

        IsThreeState 的一般用法是创建一个“全部启用”的 CheckBox，让它控制一系列的子 CheckBox，并显示它们作为一个整体的状态。
        我们下面的例子展示了如何创建几个可开关的功能，并在窗口最上面有一个“全部启用”的 CheckBox：
        -->

        <!--
        ToggleButton类还定义了当复选框进入特定状态时会触发的三个事件：Checked、UnChecked和Indeterminate。大多数情况下，
        可以很容易地通过处理继承自ButtonBase类的Click事件，将这一逻辑合并为单个事件处理程序。无论何时改变按钮的状态都会
        触发Click事件
        -->

        <StackPanel Margin="10,5">
            <CheckBox IsThreeState="True" Name="cbAllFeatures" Checked="cbAllFeatures_CheckedChanged" Unchecked="cbAllFeatures_CheckedChanged">Enable all</CheckBox>
            <StackPanel Margin="20, 5">
                <CheckBox Name="cbFeatureAbc" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature ABC</CheckBox>
                <CheckBox Name="cbFeatureXyz" IsChecked="True" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature XYZ</CheckBox>
                <CheckBox Name="cbFeatureWww" Checked="cbFeature_CheckedChanged" Unchecked="cbFeature_CheckedChanged">Enable feature WWW</CheckBox>
            </StackPanel>
        </StackPanel>
    </StackPanel>
</Window>

<!--如你所见，你在内容中想放什么都可以。三个 CheckBox 里每一个的文本格式都不一样，我甚至在第二个里放了一个 Image 控件。如果我们用控件而非文本作为 CheckBox 的内容，我们就能随意控制样式。更酷的是，无论你点击内容的哪一部分，都可以开关 CheckBox 本身-->
