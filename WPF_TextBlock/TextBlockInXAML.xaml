<Window x:Class="WPF_TextBlock.TextBlockInXAML"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_TextBlock"
        mc:Ignorable="d"
        Title="TextBlockInXAML" Height="500" Width="200">
    <StackPanel>
        <!--TextBlock 本身不是控制項，因為它並沒有繼承Control類別，但是它使用起來和WPF框架中的其他控制項類似，所以為了方便我們還是稱它為控制項。
    
TextBlock是WPF中最基本的控制項，但非常好用。它允許你顯示文字在螢幕上，像是Label控制項一樣，但使用起來比Label更簡單、使用更少資源作法。
一般來說，Label用於短、單行的文字(但可能包含其它，像是圖片等...)，而TextBlock對於多行的文字非常適合(但只能是文字形式)。Label和
TextBlock都有自己獨特的優點，所以怎麼使用就取決於你的情況-->

        <!--注意太长，没有显示全-->
        <TextBlock Margin="10">This is a TextBlock control and it comes with a very long text</TextBlock>
        <TextBlock Margin="10" Foreground="Red">
        This is a TextBlock control<LineBreak/>
        with multiple lines of text.
        </TextBlock>
        <TextBlock Margin="10" TextTrimming="CharacterEllipsis" Foreground="Green">
        This is a TextBlock control with text that may not be rendered completely, which will be indicated with an ellipsis.
        </TextBlock>
        <TextBlock Margin="10" TextWrapping="Wrap" Foreground="Blue">
        This is a TextBlock control with automatically wrapped text, using the TextWrapping property.
        </TextBlock>
        
        
        <!--TextBlock控件支持内联内容。 这些类似控件的小构造都继承自Inline类，这意味着它们可以作为较大文本的一部分进行内联呈现。 
    在撰写时，支持的元素包括AnchoredBlock，Bold，Hyperlink，InlineUIContainer，Italic，LineBreak，Run，Span和Underline。-->
        <!--这三个标签只是Span元素的子类。他们各自设置了Span元素的一个属性，以显示所需的效果。例如，Bold标签设置了FontWeight属性，
    而Italic标签设置了FontStyle属性。-->
        <TextBlock Margin="10" TextWrapping="Wrap">
        TextBlock with <Bold>bold</Bold>,<Italic>italic</Italic> and <Underline>underlined</Underline> text.
        </TextBlock>

        <!--超連結(Hyperlink)元素允許您在文本中包含連結。 它使用適合您當前Windows主題的樣式進行渲染，該主題通常是帶下引線的藍色文本，並帶有滑鼠的手形指標和紅色懸停效果。 您可以使用NavigateUri屬性來定義要導航的URL-->
        <TextBlock Margin="10" TextWrapping="Wrap">
        This text has a <Hyperlink RequestNavigate="Hyperlink_RequestNavigate" NavigateUri="https://www.baidu.com">link</Hyperlink> in it.
        </TextBlock>

        <!--
Run
Run元素允许你使用所有可以在Span元素中使用的属性来定义文本的样式。但相对于Span可以包含其他行内元素，Run只能包含纯文本。
    比较起来很显然Span元素更灵活而且在绝大多数情况上都是一个更合理的选择

Span
Span元素本身并没有任何默认的显示效果，但允许你设置几乎所有的显示效果，包括字体大小、字体样式和粗细，以及背景和前景颜色等等。
    Span元素最伟大的地方在于它能包含其他行内元素在其中，使得构建更为复杂的文本以及样式非常容易-->

        <!--如您所見，如果沒有其他元素可以更符合您的需求，或者您只想要一個空白畫布來開始格式化文本，Span元素是一個很好的選擇。-->
        <TextBlock Margin="10" TextWrapping="Wrap">
            This <Span FontWeight="Bold">is</Span> a <Span Background="Silver" Foreground="Maroon">TextBlock</Span>
            with <Span TextDecorations="Underline">several</Span><Span FontStyle="Italic">Span</Span> elements,
            <Span Foreground="Blue">
             using a <Bold>variety</Bold> of <Italic>styles</Italic>
            </Span>.
        </TextBlock>
        
    </StackPanel>
</Window>


