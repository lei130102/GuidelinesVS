<Window x:Class="WPF_Shape.View.CombiningShapes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Shape.View"
        mc:Ignorable="d"
        Title="CombiningShapes" Height="481" Width="341">

<!--
    CombinedGeometry
    融合几何图形

    (对于通过基本图元(矩形、椭圆和直线)构建复杂形状，GeometryGroup类是非常有价值的工具。但他也有明显的局限性。如果是绘制形状，并在其内部“减去”另一个形状来创建新的形状，GeometryGroup类可以工作得很好。
    然而，如果形状的边界相互交叉，就很难得到所希望的结果了，并且如果希望移除形状的一部分，GeometryGroup类就不能提供任何帮助了)
    CombinedGeometry类专门用于组合重叠到一起并且不相互包含的形状。与GeometryGroup类不同，CombinedGeometry类只使用两个几何图形，通过Geometry1和Geometry2属性提供这两个几何图形

    CombinedGeometry类没有包含FillRule属性，反而具有功能更强大的GeometryCombineMode属性，该属性可以使用4个值中的一个

    GeometryCombineMode枚举值
    Union                  创建包含两个几何图形所有区域的形状
    Intersect              创建包含两个几何图形共有区域的形状
    Xor                    创建包含两个几何图形非共有区域的形状。换句话说，就像先合并形状(使用Union)，再移除共有的部分(使用Intersect)那样
    Exclude                创建的形状包含第一个几何图形的所有区域，但不包含第二个几何图形的区域

    
    
    -->
    <Window.Resources>
        <RectangleGeometry x:Key="rect" Rect="0 0 100 100"/>
        <EllipseGeometry x:Key="ellipse" Center="85 50" RadiusX="65" RadiusY="35"/>
    </Window.Resources>

    <Grid Margin="5" TextBlock.FontSize="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Path Fill="Yellow" Stroke="Blue" Margin="5">
            <Path.Data>
                <CombinedGeometry GeometryCombineMode="Union"
                                  CombinedGeometry.Geometry1="{StaticResource rect}"
                                  CombinedGeometry.Geometry2="{StaticResource ellipse}"/>
            </Path.Data>
        </Path>
        <TextBlock Grid.Column="1" Margin="10" VerticalAlignment="Center" Text="Union"/>

        <Path Grid.Row="1" Fill="Yellow" Stroke="Blue" Margin="5">
            <Path.Data>
                <CombinedGeometry GeometryCombineMode="Intersect"
                                  CombinedGeometry.Geometry1="{StaticResource rect}"
                                  CombinedGeometry.Geometry2="{StaticResource ellipse}"/>
            </Path.Data>
        </Path>
        <TextBlock Grid.Row="1" Grid.Column="1" Margin="10" VerticalAlignment="Center" Text="Intersect"/>

        <Path Grid.Row="2" Fill="Yellow" Stroke="Blue" Margin="5">
            <Path.Data>
                <CombinedGeometry GeometryCombineMode="Xor"
                                  CombinedGeometry.Geometry1="{StaticResource rect}"
                                  CombinedGeometry.Geometry2="{StaticResource ellipse}"/>
            </Path.Data>
        </Path>
        <TextBlock Grid.Row="2" Grid.Column="1" Margin="10" VerticalAlignment="Center" Text="Xor"/>

        <Path Grid.Row="3" Fill="Yellow" Stroke="Blue" Margin="5">
            <Path.Data>
                <CombinedGeometry GeometryCombineMode="Exclude"
                                  CombinedGeometry.Geometry1="{StaticResource rect}"
                                  CombinedGeometry.Geometry2="{StaticResource ellipse}"/>
            </Path.Data>
        </Path>
        <TextBlock Grid.Row="3" Grid.Column="1" Margin="10" VerticalAlignment="Center" Text="Exclude"/>
    </Grid>
</Window>
