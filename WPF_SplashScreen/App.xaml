<Application x:Class="WPF_SplashScreen.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WPF_SplashScreen"
             StartupUri="MainWindow.xaml">
             <!--

添加初始界面的方法：
1.为项目添加图像文件(通常是.bmp、.png或者.jpg文件)
2.在Solution Explorer中选择图像文件
3.将Build Action修改为SplashScreen

在obj/Debug目录下的App.g.cs文件中自动生成如下代码：

/// <summary>
/// Application Entry Point.
/// </summary>
[System.STAThreadAttribute()]
[System.Diagnostics.DebuggerNonUserCodeAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("PresentationBuildTasks", "4.0.0.0")]
public static void Main()
{
    SplashScreen splashScreen = new SplashScreen("%e6%b5%8b%e8%af%95%e5%9b%be%e7%89%87.jfif");
    // Show the splash screen.
    // The true parameter sets the splashScreen to fade away automatically after the first window appears.
    splashScreen.Show(true);
    // Start the application.
    WPF_SplashScreen.App app = new WPF_SplashScreen.App();
    app.InitializeComponent();
    app.Run();
    // The splash screen begins its automatic fade-out now.
}
运行应用程序时，图像会立即在屏幕中央显示出来。一旦准备好运行是环境，而且Application_Startup方法执行完毕，应用程序的第一个窗口就将显示出来，这时初始界面图形会很快消失(约需300毫秒)

这种方式实现的初始界面很简单，显示的初始界面没有任何装饰，在他周围没有窗口边框，也无法通过显示一系列的多幅图像或动画让初始界面图形得到更富有想象力的效果。如果希望得到这种效果，需要采用
传统方法：创建在运行初始化代码的同时显示您所希望的图形界面的启动窗口

通过上面也可以看出，可自行编写这一简短逻辑，而不是使用SplashScreen生成操作。但有一点需要指出，可以改变的唯一细节是初始界面褪去的速度。
为此，需要向SplashScreen.Show()方法传递false(从而使WPF不会自动淡入初始界面)。然后由您负责通过调用SplashScreen.Close()方法在恰当的
时机隐藏初始界面，并提供TimeSpan值来指示经过多长时间淡出初始界面

    -->
    <Application.Resources>
         
    </Application.Resources>
</Application>
