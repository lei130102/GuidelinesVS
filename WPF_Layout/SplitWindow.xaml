<Window x:Class="WPF_Layout.SplitWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Layout"
        mc:Ignorable="d"
        Title="SplitWindow" Height="300" Width="300">

    <!--

    分割窗口

    在WPF中，分隔条由GridSplitter类表示，他是Grid面板的功能之一。通过为Grid面板添加GridSplitter对象，
    用户就可以改变行和列的尺寸

    大多数开发人员认为WPF中的GridSplitter类不是最直观的。理解如何使用GridSplitter类，从而得到所
    期望的效果需要一定的经验。下面列出几条指导原则：

    1.GridSplitter对象必须放在Grid单元格中，可与已经存在的内容一并放到单元格中，这时需要调整边距设置，使他们
    不相互重叠。更好的方法是预留一列或一行专门用于放置GridSplitter对象，并将预留行或列的Heigh或Width属性的值
    设置为Auto

    2.GridSplitter对象总是改变整行或整列的尺寸(而非改变单个单元格的尺寸)。为使GridSplitter对象的外观和行为
    保持一致，需要拉伸GridSplitter对象使其穿越整行或整列，而不是将其限制在单元格中。为此，可使用前面介绍过的
    RowSpan或ColumnSpan属性
    (例如本例中GridSplitter对象的RowSpan属性被设置为2，因此被拉伸充满整列。如果不实用该设置，GridSplitter对象
    会显示在顶行(放置他的行)中，即使这样，拖动分隔条时也会改变整列的尺寸)

    3.最初，GridSplitter对象很小不易看见。为了使其更可用，需要为其设置最小尺寸。对于竖直分割条，需要将VerticalAlignment
    属性设置为Stretch(使分割条填满区域的整个高度)，并将Width设置为固定值(如10个设备无关单位)。对于水平分割条，
    需要设置HorizontalAlignment属性来拉伸，并将Height属性设置为固定值

    4.GridSplitter对齐方式还决定了分割条是水平的(用于改变行的尺寸)还是竖直的(用于改变列的尺寸)。
    对于水平分割条，需要将VerticalAlignment属性设置为Center(这也是默认值)，以指明拖动分割条改变上面行和下面行的尺寸
    对于竖直分割条，需要将HorizontalAlignment属性设置为Center，以改变分割条两侧列的尺寸

    
    
    注意：可使用GridSplitter对象的ResizeDirection和ResizeBehavior属性修改其尺寸调整行为。然而，使这一行为完全取决于对齐方式将
    更简单，这也是默认设置
    -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="100"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition MinWidth="50"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Button Grid.Row="0" Grid.Column="0" Margin="3" Content="Left"/>
        <Button Grid.Row="0" Grid.Column="2" Margin="3" Content="Right"/>
        <Button Grid.Row="1" Grid.Column="0" Margin="3" Content="Left"/>
        <Button Grid.Row="1" Grid.Column="2" Margin="3" Content="Right"/>

        <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
                      Width="3" VerticalAlignment="Stretch" HorizontalAlignment="Center"
                      ShowsPreview="False"/>
                      <!--
                      提示：
        为了成功地创建GridSplitter对象，务必为VerticalAlignment、HorizontalAlignment以及Width属性(或Height属性)提供
        相应的属性值
        -->

        <!--
        上面的标记还包含了一处额外的细节。在声明GridSplitter对象时，将ShowsPreview属性设置为false。因此，当把分割条从一边拖到
        另一边时，会立即改变列的尺寸。但是如果将ShowsPreview属性设置为true，当拖动分割条时就会看到一个灰色的阴影跟随鼠标指针，用于
        显示将在何处进行分割。并且直到释放了鼠标键之后列的尺寸才改变。如果GridSplitter对象获得了焦点，也可以使用箭头键改变相应的
        尺寸
        -->

        <!--
        如果希望分割条以更大的幅度(如每次10个单位)进行移动，可调整DragIncrement属性。如果希望控制列的最大尺寸和最小尺寸，只需要在
        ColumnDefinitions部分设置合适的属性
        -->

        <!--
        可以改变GridSplitter对象的填充方式，使其不只是具有阴影的灰色矩形。技巧是使用Background属性应用填充，该属性接受简单的颜色或
        更复杂的画刷
        -->
    </Grid>
</Window>
