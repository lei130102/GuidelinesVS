
    <!--
    MouseUp是冒泡路由事件，本例演示冒泡过程(每一级元素都处理MouseUp事件)

    每一级元素都使用相同的事件处理方法

    MouseUp路由事件是UIElement定义的，所以每个继承自UIElement的类都提供了MouseUp路由事件(不需要共享)
    -->
<Window x:Class="WPF_RoutedEvent.BubbleRoutedEvent"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_RoutedEvent"
        mc:Ignorable="d"
        Title="BubbleRoutedEvent" Height="359" Width="329"
        MouseUp="Someone_MouseUp">
    <Grid Margin="3" MouseUp="Someone_MouseUp">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Label Margin="5" Grid.Row="0" HorizontalAlignment="Left" Background="AliceBlue" BorderBrush="Black" BorderThickness="1"
               MouseUp="Someone_MouseUp">
            <StackPanel
                MouseUp="Someone_MouseUp">
                <TextBlock Margin="3" Text="Image and text label"
                           MouseUp="Someone_MouseUp"/>
                <Image Source="/Image/happyface.jpg" Stretch="None"
                       MouseUp="Someone_MouseUp"/>
                <TextBlock Margin="3" Text="Courtesy of the StackPanel" 
                           MouseUp="Someone_MouseUp"/>
            </StackPanel>
        </Label>

        <ListBox Grid.Row="1" Margin="5" Name="lstMessages"/>
        <CheckBox Grid.Row="2" Margin="5" Name="chkHandle" Content="Handle first event"/>
        <Button Grid.Row="3" Margin="5" Padding="3" HorizontalAlignment="Right" Name="cmdClear" Click="cmdClear_Click" Content="Clear List"/>
    </Grid>
</Window>
