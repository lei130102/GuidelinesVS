<Window x:Class="WPF_TreeView.Content"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_TreeView"
        mc:Ignorable="d"
        Title="Content" Height="450" Width="800">
    <StackPanel>


    <!--我们只是直接在XAML中声明TreeViewItem对象，它们与我们想要显示它们的结构相同，其中第一个标记是TreeView控件的子标记，
    其子对象也是其父对象的子标记。要指定我们想要为每个节点显示的文本，我们使用Header属性。默认情况下，不会展开TreeViewItem，
    但为了向您展示示例的结构，我使用了IsExpanded属性来展开两个父项。-->

    <!--Header是一个有趣的属性。正如你所看到的，我可以仅指定一个文本字符串，然后不用做任何其他事情就直接将它呈现出来，
    而这一切都归功于WPF的友好 - 在内部，它将文本包装在TextBlock控件内，而不需要你来做这件事。这表示，我们可以将
    任何漂亮的东西填充到Header属性中，并在TreeView中呈现出来，而不仅仅是一个字符串 - 这是为什么自定义WPF控件的
    外观如此简单的一个很好的例子。

来自WinForms甚至其他UI库的人员的一个常见请求是能够在TreeView项目的文本标签旁边显示图像。使用WinForms非常容易，
    因为TreeView完全是针对这种情况构建的。使用WPF TreeView，它有点复杂，但是你获得的灵活性远远超过你从WinForms
    TreeView获得的灵活性。这是一个例子：-->

        <TreeView>
            <TreeViewItem IsExpanded="True">
                <TreeViewItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Image/n00.png"/>
                        <TextBlock Text="Level 1 (Blue)"/>
                    </StackPanel>
                </TreeViewItem.Header>
                <TreeViewItem>
                    <TreeViewItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Level 2.1" Foreground="Blue"/>
                        </StackPanel>
                    </TreeViewItem.Header>
                </TreeViewItem>
                <TreeViewItem IsExpanded="True">
                    <TreeViewItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Image/n01.png"/>
                            <TextBlock Text="Level 2.2 (Green)" Foreground="Blue"/>
                        </StackPanel>
                    </TreeViewItem.Header>
                    <TreeViewItem>
                        <TreeViewItem.Header>
                            <TextBlock Text="Level 3.1" Foreground="Green"/>
                        </TreeViewItem.Header>
                    </TreeViewItem>
                    <TreeViewItem>
                        <TreeViewItem.Header>
                            <TextBlock Text="Level 3.2" Foreground="Green"/>
                        </TreeViewItem.Header>
                    </TreeViewItem>
                </TreeViewItem>
                <TreeViewItem>
                    <TreeViewItem.Header>
                        <TextBlock Text="Level 2.3" Foreground="Blue"/>
                    </TreeViewItem.Header>
                </TreeViewItem>
            </TreeViewItem>
        </TreeView>
    </StackPanel>
</Window>
