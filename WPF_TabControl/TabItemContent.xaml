<Window x:Class="WPF_TabControl.TabItemContent"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_TabControl"
        mc:Ignorable="d"
        Title="Content" Height="900" Width="400">
    <StackPanel>

<!--
       GroupBox控件、TabItem控件和Expander控件 (都继承自HeaderedContentControl类，HeaderedContentControl类又继承自ContentControl类，HeaderedContentControl类的作用十分简单，他表示
    包含单一元素内容(存储在Content属性中)和单一元素标题(存储在Header属性中)的容器) 

       TabItem控件是内容控件，所以他有Content属性 
        
        TabItem表示TabControl控件中的一页。TabItem类添加的唯一有意义的属性是IsSelected，该属性指示选项卡当前是否显示在TabControl控件中

        与Content属性一样，Header属性也可接受任何类型的对象。继承自UIElement的类通过渲染来显示，对于内联文本以及其他所有对象则使用ToString()方法
        
        -->
            <TabControl>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Image/n00.png"/>
                        <TextBlock Text="Blue" Foreground="Blue"/>
                    </StackPanel>
                </TabItem.Header>
                <Label Content="Content goes here..."/>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Image/n01.png"/>
                        <TextBlock Text="Red" Foreground="Red"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Image/n02.png"/>
                        <TextBlock Text="Green" Foreground="Green"/>
                    </StackPanel>
                </TabItem.Header>
            </TabItem>
        </TabControl>




<!--
如果您想修改选项卡的外观（包括形状和边框），就需要覆盖TabItem元素的控件模板

正如您所看到的，这使得TabControl看起来有点像Windows 8的风格，没有边框和不太精致的颜色来标记选定的选项卡，未选定的
选项卡没有背景。 所有这一切都是通过使用Style更改ControlTemplate来实现的。 通过添加ContentPresenter 控件，我们指
定TabItem的内容应放在何处。 我们还有几个触发器，它们根据IsSelected属性控制选项卡的背景颜色。
-->

        <TabControl Margin="10" BorderThickness="0" Background="LightGray">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid Name="Panel">
                                    <ContentPresenter x:Name="ContentSize"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      ContentSource="Header"
                                                      Margin="10,2"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Panel" Property="Background" Value="LightSkyBlue"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Panel" Property="Background" Value="white"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="General">
                <Label Content="Content goes here..."/>
            </TabItem>
            <TabItem Header="Security"/>
            <TabItem Header="Details"/>
        </TabControl>

        <!--
        如果你想要一个不那么精致的外观，它就像更改模板一样简单。 例如，你可能想要一个边框，但有圆角和渐变背景 - 没问题！ 看看下一个例子，我们在那里完成：
        正如您所看到的，我只是在ContentPresenter周围添加了一个Border控件来实现这种外观的变化。 希望这能证明选项卡的自定义样式是多么容易，以及这种技术的无限可能。
        -->
        
        <TabControl Margin="10" BorderBrush="Gainsboro">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
                                    <ContentPresenter x:Name="ContentSite"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      ContentSource="Header"
                                                      Margin="10,2"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="LightSkyBlue"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="GhostWhite"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="General">
                <Label Content="Content goes here..."/>
            </TabItem>
            <TabItem Header="Security"/>
            <TabItem Header="Details"/>
        </TabControl>

    </StackPanel>
</Window>
