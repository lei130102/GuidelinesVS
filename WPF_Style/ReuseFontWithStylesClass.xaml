<Window x:Class="WPF_Style.ReuseFontWithStylesClass"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Style"
        mc:Ignorable="d"
        Title="ReuseFontWithStylesClass" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="BigFontButtonStyle">

            <Setter Property="Button.FontFamily" Value="Times New Roman"/>
            <Setter Property="Button.FontSize" Value="18"/>

            <Setter Property="TextBlock.FontFamily" Value="Arial"/>
            <Setter Property="TextBlock.FontSize" Value="10"/>
        </Style>
    </Window.Resources>
    <StackPanel>
        <Button Padding="5" Margin="5" Content="A Customized Button" Style="{StaticResource BigFontButtonStyle}"/>
        <TextBlock Margin="5" Text="A Customized TextBlock" Style="{StaticResource BigFontButtonStyle}" />
        <!--
        尽管Button.FontFamily和TextBlock.FontFamily属性是在各自的基类中分别生命但他们都引用同一个依赖项属性(换句话说，TextBlock.FontSizeProperty和
        Button.FontSizeProperty引用都指向同一个DependencyProperty对象)
        所以当Button使用这个样式时，WPF设置FontFamily和FontSize属性两次。最后应用的设置具有优先权
        所以当TextBlock使用这个样式时，WPF设置FontFamily和FontSize属性两次。最后应用的设置具有优先权
        
        -->
    </StackPanel>

</Window>
